trace: Input IDENTIFIER
trace: Shift 20
trace: Stack: IDENTIFIER
trace: Input LBRACE
trace: Shift 55
trace: Stack: IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: startblock
trace: Reduce [statement ::= startblock].
trace: Shift 59
trace: Stack: statement
trace: Reduce [statementlist ::= statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input LBRACE
trace: Shift 55
trace: Stack: statementlist IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input FLOAT
trace: Shift 42
trace: Stack: statementlist IDENTIFIER EQUAL FLOAT
trace: Input SEMICOLON
trace: Reduce [value ::= FLOAT].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input IDENTIFIER
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input IDENTIFIER
trace: Shift 31
trace: Stack: statementlist IDENTIFIER IDENTIFIER
trace: Input LBRACE
trace: Shift 54
trace: Stack: statementlist IDENTIFIER IDENTIFIER LBRACE
trace: Input IDENTIFIER
trace: Reduce [startblock ::= IDENTIFIER IDENTIFIER LBRACE].
trace: Shift 51
trace: Stack: statementlist startblock
trace: Reduce [statement ::= startblock].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input STRING
trace: Shift 43
trace: Stack: statementlist IDENTIFIER EQUAL STRING
trace: Input SEMICOLON
trace: Reduce [value ::= STRING].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input IDENTIFIER
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 20
trace: Stack: statementlist IDENTIFIER
trace: Input EQUAL
trace: Shift 4
trace: Stack: statementlist IDENTIFIER EQUAL
trace: Input INTEGER
trace: Shift 41
trace: Stack: statementlist IDENTIFIER EQUAL INTEGER
trace: Input SEMICOLON
trace: Reduce [value ::= INTEGER].
trace: Shift 38
trace: Stack: statementlist IDENTIFIER EQUAL value
trace: Reduce [expression ::= value].
trace: Shift 17
trace: Stack: statementlist IDENTIFIER EQUAL expression
trace: Reduce [signed_expression ::= expression].
trace: Shift 35
trace: Stack: statementlist IDENTIFIER EQUAL signed_expression
trace: Reduce [assignment ::= IDENTIFIER EQUAL signed_expression].
trace: Shift 28
trace: Stack: statementlist assignment
trace: Shift 49
trace: Stack: statementlist assignment SEMICOLON
trace: Input RBRACE
trace: Reduce [statement ::= assignment SEMICOLON].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Shift 52
trace: Stack: statementlist RBRACE
trace: Input $
trace: Reduce [statement ::= RBRACE].
trace: Shift 32
trace: Stack: statementlist statement
trace: Reduce [statementlist ::= statementlist statement].
trace: Shift 1
trace: Stack: statementlist
trace: Reduce [deck ::= statementlist].
trace: Accept!
trace: Popping $
